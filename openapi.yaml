openapi: 3.0.3
info:
  title: Mini Ecommerce Mock API
  version: 1.0.0
  description: |
    Contrato OpenAPI para un mini ecommerce, diseñado para ser servido con Prism como backend simulado.
    Incluye autenticación, productos, carrito, checkout y órdenes. Las respuestas incluyen ejemplos
    consistentes y pueden usarse directamente con Prism.
servers:
  - url: http://localhost:4010
    description: Servidor mock local con Prism
security:
  - bearerAuth: []

tags:
  - name: Auth
    description: Autenticación y gestión de sesión
  - name: Products
    description: Catálogo de productos
  - name: Cart
    description: Carrito de compras
  - name: Checkout
    description: Proceso de pago
  - name: Orders
    description: Gestión de órdenes

paths:
  /auth/login:
    post:
      tags: [Auth]
      summary: Iniciar sesión
      description: Devuelve un token de autenticación y el identificador del usuario.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              email: user@example.com
              password: strong_password_123
      responses:
        '200':
          description: Autenticación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              examples:
                success:
                  value:
                    token: mock-token-123
                    userId: user-123
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: AUTH_401
                message: Invalid email or password

  /products:
    get:
      tags: [Products]
      summary: Listar productos
      description: Devuelve una lista paginada de productos.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Número máximo de productos a retornar
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
          description: Desplazamiento para paginación
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              example:
                - id: prod-1
                  name: Running Shoes
                  price: 89.99
                  description: Lightweight running shoes for daily training
                  imageUrl: https://cdn.example.com/images/prod-1.png
                - id: prod-2
                  name: Wireless Headphones
                  price: 129.5
                  description: Noise-cancelling over-ear headphones
                  imageUrl: https://cdn.example.com/images/prod-2.png
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: AUTH_401
                message: Missing or invalid token

  /products/{id}:
    get:
      tags: [Products]
      summary: Detalle de producto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Identificador del producto
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: prod-1
                name: Running Shoes
                price: 89.99
                description: Lightweight running shoes for daily training
                imageUrl: https://cdn.example.com/images/prod-1.png
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: AUTH_401
                message: Missing or invalid token
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: PROD_404
                message: Product not found

  /cart:
    get:
      tags: [Cart]
      summary: Obtener carrito actual
      responses:
        '200':
          description: Carrito de compras del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                userId: user-123
                cartItems:
                  - productId: prod-1
                    quantity: 2
                    subtotal: 179.98
                  - productId: prod-2
                    quantity: 1
                    subtotal: 129.5
                totalAmount: 309.48
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: AUTH_401
                message: Missing or invalid token
    post:
      tags: [Cart]
      summary: Agregar o actualizar ítem en el carrito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToCartRequest'
            example:
              productId: prod-1
              quantity: 2
      responses:
        '200':
          description: Carrito actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                userId: user-123
                cartItems:
                  - productId: prod-1
                    quantity: 2
                    subtotal: 179.98
                totalAmount: 179.98
        '400':
          description: Petición inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: CART_400
                message: Invalid productId or quantity
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: AUTH_401
                message: Missing or invalid token

  /checkout:
    post:
      tags: [Checkout]
      summary: Ejecutar checkout del carrito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
            example:
              paymentMethod: card
              cardLast4: '4242'
              address:
                line1: 123 Main St
                city: Springfield
                country: US
      responses:
        '200':
          description: Checkout procesado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutResponse'
              example:
                orderId: order-1001
                totalAmount: 309.48
                paymentStatus: paid
        '400':
          description: Carrito vacío o datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: CHK_400
                message: Cart is empty
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: AUTH_401
                message: Missing or invalid token

  /orders:
    get:
      tags: [Orders]
      summary: Listar órdenes del usuario
      responses:
        '200':
          description: Lista de órdenes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              example:
                - id: order-1001
                  userId: user-123
                  items:
                    - productId: prod-1
                      quantity: 2
                      unitPrice: 89.99
                      subtotal: 179.98
                    - productId: prod-2
                      quantity: 1
                      unitPrice: 129.5
                      subtotal: 129.5
                  totalAmount: 309.48
                  paymentStatus: paid
                  createdAt: '2025-01-01T12:00:00Z'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: AUTH_401
                message: Missing or invalid token

  /orders/{id}:
    get:
      tags: [Orders]
      summary: Detalle de orden
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Identificador de la orden
      responses:
        '200':
          description: Orden encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              example:
                id: order-1001
                userId: user-123
                items:
                  - productId: prod-1
                    quantity: 2
                    unitPrice: 89.99
                    subtotal: 179.98
                  - productId: prod-2
                    quantity: 1
                    unitPrice: 129.5
                    subtotal: 129.5
                totalAmount: 309.48
                paymentStatus: paid
                createdAt: '2025-01-01T12:00:00Z'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: AUTH_401
                message: Missing or invalid token
        '404':
          description: Orden no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: ORD_404
                message: Order not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 6
          example: strong_password_123

    AuthResponse:
      type: object
      required: [token, userId]
      properties:
        token:
          type: string
          description: Token Bearer de autenticación
          example: mock-token-123
        userId:
          type: string
          description: Identificador del usuario
          example: user-123

    Product:
      type: object
      required: [id, name, price, description, imageUrl]
      properties:
        id:
          type: string
          example: prod-1
        name:
          type: string
          example: Running Shoes
        price:
          type: number
          format: float
          example: 89.99
        description:
          type: string
          example: Lightweight running shoes for daily training
        imageUrl:
          type: string
          format: uri
          example: https://cdn.example.com/images/prod-1.png

    CartItem:
      type: object
      required: [productId, quantity, subtotal]
      properties:
        productId:
          type: string
          example: prod-1
        quantity:
          type: integer
          minimum: 1
          example: 2
        subtotal:
          type: number
          minimum: 0
          example: 179.98

    Cart:
      type: object
      required: [userId, cartItems, totalAmount]
      properties:
        userId:
          type: string
          example: user-123
        cartItems:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          example:
            - productId: prod-1
              quantity: 2
              subtotal: 179.98
        totalAmount:
          type: number
          minimum: 0
          example: 179.98

    AddToCartRequest:
      type: object
      required: [productId, quantity]
      properties:
        productId:
          type: string
          example: prod-1
        quantity:
          type: integer
          minimum: 1
          example: 2

    CheckoutRequest:
      type: object
      required: [paymentMethod]
      properties:
        paymentMethod:
          type: string
          enum: [card, cash, bank_transfer]
          example: card
        cardLast4:
          type: string
          pattern: '^[0-9]{4}$'
          example: '4242'
        address:
          type: object
          properties:
            line1:
              type: string
            city:
              type: string
            country:
              type: string

    CheckoutResponse:
      type: object
      required: [orderId, totalAmount, paymentStatus]
      properties:
        orderId:
          type: string
          example: order-1001
        totalAmount:
          type: number
          minimum: 0
          example: 309.48
        paymentStatus:
          type: string
          enum: [pending, paid, failed]
          example: paid

    OrderItem:
      type: object
      required: [productId, quantity, unitPrice, subtotal]
      properties:
        productId:
          type: string
          example: prod-1
        quantity:
          type: integer
          minimum: 1
          example: 2
        unitPrice:
          type: number
          minimum: 0
          example: 89.99
        subtotal:
          type: number
          minimum: 0
          example: 179.98

    Order:
      type: object
      required: [id, userId, items, totalAmount, paymentStatus, createdAt]
      properties:
        id:
          type: string
          example: order-1001
        userId:
          type: string
          example: user-123
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        totalAmount:
          type: number
          minimum: 0
          example: 309.48
        paymentStatus:
          type: string
          enum: [pending, paid, failed]
          example: paid
        createdAt:
          type: string
          format: date-time
          example: '2025-01-01T12:00:00Z'

    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: AUTH_401
        message:
          type: string
          example: Missing or invalid token
